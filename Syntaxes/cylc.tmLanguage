<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>suite.rc</string>
		<string>suite.rc.processed</string>
		<string>cylc</string>
		<string>cylc.processed</string>
		<string>flow.rc</string>
		<string>flow-tests.rc</string>
	</array>
	<key>name</key>
	<string>cylc</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#jinja2</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#graphSections</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#headers</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#settings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#includeFiles</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.cylc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#).*</string>
					<key>name</key>
					<string>comment.line.cylc</string>
				</dict>
			</array>
		</dict>
		<key>graphSections</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(graph)[\t ]*(=)[\t ]*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.graph.cylc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.cylc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Cylc 7 graph syntax</string>
					<key>end</key>
					<string>(?=[#\n\r])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#graphStrings</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.string.cylc</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>In this situation, we cannot have string after string, or string on new line</string>
							<key>match</key>
							<string>(?:^|(?&lt;=&quot;))[\t ]*+([^#\n\r]+)</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[{2}[\t ]*graph[\t ]*\]{2}</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#headers</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>comment</key>
					<string>Cylc 8 graph syntax</string>
					<key>contentName</key>
					<string>meta.graph-section.cylc</string>
					<key>end</key>
					<string>(?=^[\t ]*\[)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\S[^=#]*)(=)[\t ]*</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#jinja2</string>
										</dict>
										<dict>
											<key>match</key>
											<string>[\w\+\^\$][\w\+\-\^\$\/\t ,:]*</string>
											<key>name</key>
											<string>keyword.graph.cylc</string>
										</dict>
									</array>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.cylc</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=[#\n\r])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#graphStrings</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>invalid.illegal.string.cylc</string>
										</dict>
									</dict>
									<key>comment</key>
									<string>In this situation, we cannot have string after string, or string on new line</string>
									<key>match</key>
									<string>(?:^|(?&lt;=&quot;))[\t ]*+([^#\n\r]+)</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>graphStrings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\G(&quot;{3})</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.triple.cylc</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cylc</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&quot;{3})</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.triple.cylc</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cylc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.graph-syntax.quoted.triple.cylc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#graphSyntax</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\G(&quot;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.cylc</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cylc</string>
						</dict>
					</dict>
					<key>end</key>
					<string>([&quot;\n\r])</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.cylc</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cylc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.graph-syntax.quoted.double.cylc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#graphSyntax</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#graphSyntax</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>match</key>
					<string>\G[^#\n\r&quot;]+</string>
					<key>name</key>
					<string>meta.graph-syntax.unquoted.cylc</string>
				</dict>
			</array>
		</dict>
		<key>graphSyntax</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parameterizations</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#jinja2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b\w[\w\+\-@%]*</string>
					<key>name</key>
					<string>meta.variable.task.cylc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=&gt;</string>
					<key>name</key>
					<string>keyword.control.trigger.cylc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[\|&amp;]</string>
					<key>name</key>
					<string>keyword.other.logical.cylc</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.begin.cylc</string>
						</dict>
					</dict>
					<key>end</key>
					<string>[\)\n\r]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.end.cylc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.parens.cylc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#graphSyntax</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.suicide.cylc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.variable.task.cylc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;=^|[\s&amp;&gt;])(!)(\b\w[\w\+\-@%]*)</string>
					<key>name</key>
					<string>meta.variable.suicide.cylc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.cylc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(@)[\w\-]+</string>
					<key>name</key>
					<string>variable.other.xtrigger.cylc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\</string>
					<key>name</key>
					<string>constant.character.escape.continuation.cylc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.annotation.qualifier.cylc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.annotation.cylc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.annotation.cylc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>e.g. foo:fail =&gt; bar</string>
					<key>match</key>
					<string>(?&lt;!^|[\s:])((:)([\w\-]+))</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\S)\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.brackets.begin.cylc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>e.g. foo[-P1]</string>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.brackets.end.cylc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.annotation.inter-cycle.cylc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#jinja2</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#intervals</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#isodatetimes</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.language.cycle-point.cylc</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>If 1st char is ^ (allowing for spaces)</string>
							<key>match</key>
							<string>\G[\t ]*(\^)</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[\+\-]</string>
							<key>name</key>
							<string>keyword.operator.arithmetic.cylc</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>Integer as long as it isn&#39;t adjacent to a letter</string>
							<key>match</key>
							<string>\b\d+\b</string>
							<key>name</key>
							<string>constant.numeric.integer-point.cylc</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>headers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.cylc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cylc</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#parameterizations</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#jinja2</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cylc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>@TODO handle `+`, `-`, `/` chars; convert to begin/end instead of match?</string>
					<key>match</key>
					<string>(\[+)([^\[\]]+?)(\]+)</string>
					<key>name</key>
					<string>meta.section.cylc</string>
				</dict>
			</array>
		</dict>
		<key>includeFiles</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.include.cylc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.cylc</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#jinja2</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>match</key>
					<string>(%include)[\t ]*(.*)</string>
					<key>name</key>
					<string>meta.include.cylc</string>
				</dict>
			</array>
		</dict>
		<key>intervals</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>e.g. P1H without T separator</string>
					<key>match</key>
					<string>\bP\d+[HS]</string>
					<key>name</key>
					<string>invalid.illegal.interval.cylc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.period.cylc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>e.g. P1 but not P1D</string>
					<key>match</key>
					<string>\b(P)\d+\b</string>
					<key>name</key>
					<string>constant.numeric.interval.integer.cylc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.period.cylc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.week.cylc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>e.g. P1W</string>
					<key>match</key>
					<string>\b(P)\d+(W)\b</string>
					<key>name</key>
					<string>constant.numeric.interval.iso.cylc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.period.cylc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.year.cylc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.month.cylc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.day.cylc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.time.cylc</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.hour.cylc</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.min.cylc</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.sec.cylc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>e.g. P1Y1M1DT1H1M1S, P1D, PT1M. (P(?=(?:\d|T\d))) captures P only if followed by a digit or T. (?:\d+(Y))? matches e.g. 1Y zero or more times, etc.</string>
					<key>match</key>
					<string>\b(P(?=(?:\d|T\d)))(?:\d+(Y))?(?:\d+(M))?(?:\d+(D))?(?:(T)(?:\d+(H))?(?:\d+(M))?(?:\d+(S))?)?\b</string>
					<key>name</key>
					<string>constant.numeric.interval.iso.cylc</string>
				</dict>
			</array>
		</dict>
		<key>isodatetimes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Malformed isodatetime e.g. 2000T00</string>
					<key>match</key>
					<string>\b\d{3,7}T\d{2,}Z?\b</string>
					<key>name</key>
					<string>invalid.illegal.isodatetime.cylc</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Mixed long/short syntaxes e.g. 2000-12-01T0600</string>
					<key>match</key>
					<string>\b(\d{4})(?:(\-)(\d{2}))?(?:(\-)(\d{2}))?T\d{3,}\b</string>
					<key>name</key>
					<string>invalid.illegal.isodatetime.cylc</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Mixed long/short syntaxes e.g. 20001201T06:00, 20001201T06+05:30</string>
					<key>match</key>
					<string>\b(\d{4})(\d{2})?(\d{2})?T\d{2,}(?:[\+\-]\d+)?\:\d*\b</string>
					<key>name</key>
					<string>invalid.illegal.isodatetime.cylc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.year.cylc</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.time.cylc</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.sec.cylc</string>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.timezone.long.cylc</string>
						</dict>
						<key>13</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.timezone.cylc</string>
						</dict>
						<key>14</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.timezone.cylc</string>
						</dict>
						<key>15</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.hour.cylc</string>
						</dict>
						<key>16</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.time.cylc</string>
						</dict>
						<key>17</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.min.cylc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.date.cylc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.month.cylc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.date.cylc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.day.cylc</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.time.cylc</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.hour.cylc</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.time.cylc</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.min.cylc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(\d{4})(?:(\-)(\d{2}))?(?:(\-)(\d{2}))?(?:(T)(\d{2})(?:(:)(\d{2}))?(?:(:)(\d{2}))?((Z)|(?:([\+\-])(\d{2})(?:(\:)(\d{2}))?))?)?\b</string>
					<key>name</key>
					<string>constant.numeric.isodatetime.long.cylc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.year.cylc</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.timezone.cylc</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.hour.cylc</string>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.min.cylc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.month.cylc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.day.cylc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.time.cylc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.hour.cylc</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.min.cylc</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.sec.cylc</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.isotimezone.short.cylc</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.timezone.cylc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(\d{4})(\d{2})?(\d{2})?(?:(T)(\d{2})(\d{2})?(\d{2})?((Z)|(?:([\+\-])(\d{2})(\d{2})?))?)?\b</string>
					<key>name</key>
					<string>constant.numeric.isodatetime.short.cylc</string>
				</dict>
			</array>
		</dict>
		<key>jinja2</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?={%)</string>
					<key>comment</key>
					<string>e.g. {% ... %}</string>
					<key>contentName</key>
					<string>source.jinja</string>
					<key>end</key>
					<string>(?&lt;=%})</string>
					<key>name</key>
					<string>meta.embedded.block.jinja</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.jinja</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\G{%[\+\-]?</string>
							<key>name</key>
							<string>punctuation.definition.template-expression.begin.jinja</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\-?%}</string>
							<key>name</key>
							<string>punctuation.definition.template-expression.end.jinja</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?={{)</string>
					<key>comment</key>
					<string>e.g. {{ ... }}</string>
					<key>contentName</key>
					<string>source.jinja</string>
					<key>end</key>
					<string>(?&lt;=}})</string>
					<key>name</key>
					<string>meta.embedded.block.jinja</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.jinja</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\G{{</string>
							<key>name</key>
							<string>punctuation.definition.template-expression.begin.jinja</string>
						</dict>
						<dict>
							<key>match</key>
							<string>}}</string>
							<key>name</key>
							<string>punctuation.definition.template-expression.end.jinja</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>{#</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.jinja</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>e.g. {# ... #}</string>
					<key>end</key>
					<string>#}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.jinja</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.jinja</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(if|for|while|return)\b</string>
					<key>name</key>
					<string>keyword.control.cylc</string>
				</dict>
			</array>
		</dict>
		<key>parameterizations</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>&lt;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.annotation.begin.cylc</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.annotation.end.cylc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.annotation.parameterization.cylc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#jinja2</string>
						</dict>
						<dict>
							<key>name</key>
							<string>meta.polling.cylc</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>entity.name.namespace.suite.cylc</string>
										</dict>
									</dict>
									<key>match</key>
									<string>([^\s&lt;&gt;]+)(?=::)</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?&lt;=\S)::(?=\S)</string>
									<key>name</key>
									<string>punctuation.accessor.cylc</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>meta.variable.task.cylc</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(?&lt;=::)(\b\w[\w\+\-@%]*)</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>meta.annotation.qualifier.cylc</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.annotation.cylc</string>
										</dict>
										<key>3</key>
										<dict>
											<key>name</key>
											<string>variable.annotation.cylc</string>
										</dict>
									</dict>
									<key>comment</key>
									<string>e.g. foo:fail =&gt; bar</string>
									<key>match</key>
									<string>(?&lt;!^|[\s:])((:)([\w\-]+))</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.cylc</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.cylc</string>
								</dict>
								<key>3</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>\d+$</string>
											<key>name</key>
											<string>constant.numeric.cylc</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\w+</string>
											<key>name</key>
											<string>variable.other.cylc</string>
										</dict>
									</array>
								</dict>
							</dict>
							<key>match</key>
							<string>(\w+)[\t ]*(=)[\t ]*(\w+)</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.arithmetic.cylc</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>constant.numeric.cylc</string>
								</dict>
							</dict>
							<key>match</key>
							<string>([\+\-])[\t ]*(\d+)(?!\w)</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\w+</string>
							<key>name</key>
							<string>variable.parameter.cylc</string>
						</dict>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.separator.parameter.cylc</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>settings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>([^=#\s][^=#\n\r]*?)?[\t ]*(=)[\t ]*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#jinja2</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[\w\-\t ]+</string>
									<key>name</key>
									<string>variable.other.key.cylc</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.cylc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.value.cylc</string>
					<key>end</key>
					<string>(?=[#\n\r])</string>
					<key>name</key>
					<string>meta.setting.cylc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.string.cylc</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>In this situation, we cannot have string after string, or string on new line</string>
							<key>match</key>
							<string>(?:^|(?&lt;=&quot;))[\t ]*+([^#\n\r]+)</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#jinja2</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>string.unquoted.value.cylc</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#jinja2</string>
										</dict>
									</array>
								</dict>
							</dict>
							<key>match</key>
							<string>([^#\n\r]+)</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&quot;{3})</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cylc</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&quot;{3})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cylc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.triple.cylc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#jinja2</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.cylc</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&quot;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cylc</string>
						</dict>
					</dict>
					<key>end</key>
					<string>([&quot;\n\r])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cylc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.cylc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#jinja2</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.cylc</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.cylc</string>
	<key>uuid</key>
	<string>FC7AB0B4-9DE2-4162-8470-6A3139F90599</string>
</dict>
</plist>
